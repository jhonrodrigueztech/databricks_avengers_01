name: Production Flow

# Trigger this workflow manually with the workflow_dispatch event
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      destination:
        description: 'Destination'
        required: true
        type: string

env:
  ROOT_PATH: '${{ github.workspace }}'
  BRANCH_NAME: '${{ github.head_ref || github.ref_name }}'

run-name: Deploy to production Databricks at destination ${{ inputs.destination }} by @${{ github.actor }}

env:
  AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS_PRD }}
  AZURE_SP_APPLICATION_ID: ${{ secrets.ARM_CLIENT_ID }}
  AZURE_SP_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  AZURE_SP_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  DATABRICKS_BUNDLE_ENV: production

jobs:
  validate_deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: production
      - name: Prepare Databricks CLI 
        uses: databricks/setup-cli@main
      - name: Set Version
        run: |
          echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Log in azure
        uses: azure/login@v2
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}
      - name: Run Databricks bundle validate 
        working-directory: ./${{ inputs.destination }}
        run: |
          databricks bundle validate --var release=${{ env.VERSION }} -t production
      - name: Run Databricks bundle deploy 
        working-directory: ./${{ inputs.destination }}
        run: |
          databricks bundle deploy --var release=${{ env.VERSION }} -t production